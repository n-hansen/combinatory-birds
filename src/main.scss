$term-hpad: 0.2ch;

.feather {
  width: 24px;
  height: 24px;
  stroke: currentColor;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
  fill: none;
}

.expr {
    display: flex;

    .appl {
        display: flex;
        flex-direction: row;
    }

    .longName {
        &::before {
            content: '[';
            font-style: normal;
        }
        &::after {
            content: ']';
            font-style: normal;
        }
    }

    &.borderedTree {
        .appl {
            margin: 1px;
            border: 1px solid black;
            align-items: center;
        }

        .term, .freeVar {
            padding: $term-hpad;

            &:first-child {
                margin-left: $term-hpad;
            }

            &:last-child {
                margin-right: $term-hpad;
            }
        }

        .freeVar {
            font-style: italic;
        }

    }

    &.symbolString {
        padding-top: 1px;
        padding-bottom: 1px;

        .appl {
            align-items: baseline;
        }

        .appl.needsParens {
            &::before {
                content: '(';
            }
            &::after {
                content: ')';
            }
        }
    }
}

.prettyTree svg {
    .leaf {
        rect {
            fill: white;
            stroke: black;
            stroke-width: 1;
        }

        text {
            text-anchor: middle;
        }
    }

    .edge {
        stroke: black;
    }
}

$error-color: #d61002;

.parseError {
    .msg {
        color: $error-color;
        text-decoration: underline;

    }
    span.squiggle {
        color: #d67a02;
    }
    span.arr {
        color: $error-color;
    }
}

textarea {
    width: 100%;
}

.rulesView table {
    width: auto;

    tr:first-child {
        td {
            border-top: none;
        }
    }

    td {
        vertical-align: middle;
    }

    .ruleControls {
        visibility: hidden;
    }

    tr:hover {
        .ruleControls {
            visibility: visible;
        }
    }
}

.buttonRow {
    display: flex;
    flex-direction: row;

    > .btn {
        margin-right: 4px;
    }
}

.historyView {
    font-size: smaller;
}

.arr {
    transition: transform 0.3s ease-in-out;

    &.reverse {
        transform: rotate(-0.5turn);
    }

    .feather {
        width: 18px;
        height: 18px;
    }
}

// advance hue by the inv of the golden ratio each step
$hue-step: 360deg * 0.618033988749895;

@for $i from 0 through 20 {
    $rw-hue: ($i * $hue-step) % 360deg;
    .ruleSwatch#{$i} {
        width: 1.2ex;
        height: 1.2ex;
        border: 1px solid gray;
        border-radius: 50%;
        background-color: hsl($rw-hue, 66%, 66%);
    }

    .expr.borderedTree .rewriteFrom#{$i} {
        background-color: hsl($rw-hue, 70%, 75%);
    }

    .expr.borderedTree .rewriteTo#{$i} {
        border: 3px solid hsl($rw-hue, 95%, 35%);
    }

    .expr.symbolString .rewriteFrom#{$i} {
        border-top: 1px solid hsl($rw-hue, 90%, 45%);
    }

    .expr.symbolString .rewriteTo#{$i} {
        border-bottom: 1px solid hsl($rw-hue, 90%, 45%);
    }
}
